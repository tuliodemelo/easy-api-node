{
  "version": 3,
  "sources": [
    "categoria.js"
  ],
  "names": [
    "module",
    "exports",
    "utils",
    "app",
    "modules",
    "route",
    "all",
    "auth",
    "authenticate",
    "post",
    "req",
    "res",
    "body",
    "undefined",
    "tamanho",
    "length",
    "map",
    "item",
    "Categorias",
    "getModel",
    "params",
    "empresa",
    "tipo",
    "create",
    "then",
    "key",
    "json",
    "value",
    "catch",
    "status",
    "msg",
    "err",
    "message",
    "get",
    "findAll",
    "categorias",
    "findOne",
    "where",
    "id",
    "sendStatus",
    "put",
    "update",
    "delete",
    "destroy"
  ],
  "mappings": "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",
  "file": "categoria.js",
  "sourceRoot": "../../build/routes",
  "sourcesContent": [
    "module.exports = app => {\n\n    const utils = app.app.modules.utils;\n\n    app.route('/categoria/multiplo/:empresa')\n    .all(app.auth.authenticate())\n    .post((req, res) => {\n\n      if (req.body[0] != undefined) {\n        const tamanho = req.body[0].length;\n        return req.body[0].map(item, key => {\n          let Categorias = utils.getModel(req.params.empresa, 'categoria', item.tipo || false);\n\n          return Categorias.create(item)\n          .then(value => {\n            if (tamanho >= key) return res.json(value);\n          })\n          //Error 412 usado para quando uma dos atributos passados no cabeçalho for considerado com falso\n          //assim impedindo o recurso de ser executado\n          .catch(err => res.status(412).json({msg: err.message}));\n        });\n      }\n\n      res.status(412).json({msg: 'Não há item a ser inserido.'});\n    });\n\n    app.route('/categoria/:empresa')\n    .all(app.auth.authenticate())\n\n    .get((req, res) => {\n      /**Contem o objeto de Tasks, que está na pasta models */\n      const Categorias = utils.getModel(req.params.empresa, 'categoria');\n\n      Categorias.findAll({})\n      .then(categorias => res.json({categorias}))\n      //Error 412 usado para quando uma dos atributos passados no cabeçalho for considerado com falso\n      //assim impedindo o recurso de ser executado\n      .catch(err => res.status(412).json({msg: err.message}));\n    })\n\n    .post((req, res) => {\n\n      if (req.body[0] != undefined) {\n        req.body[0].map(item => {\n          let Categorias = utils.getModel(req.params.empresa, 'categoria', item.tipo || false);\n\n        });\n      }\n\n      const Categorias = utils.getModel(req.params.empresa, 'categoria');\n\n      Categorias.create(req.body)\n      .then(value => res.json(value))\n      //Error 412 usado para quando uma dos atributos passados no cabeçalho for considerado com falso\n      //assim impedindo o recurso de ser executado\n      .catch(err => res.status(412).json({msg: err.message}));\n    });\n\n    app.route('/categoria/:empresa/:id')\n    .all(app.auth.authenticate())\n\n    .get((req, res) => {\n      /**Contem o objeto de Tasks, que está na pasta models */\n      const Categorias = utils.getModel(req.params.empresa, 'categoria');\n\n      Categorias.findOne({ where: { id: req.params.id } })\n      .then(value => {\n        if (value) return res.json(value);\n\n        //Caso não encontre valor, retorna 404 -> Registro não encontrado\n        return res.sendStatus(404);\n      })\n      //Error 412 usado para quando uma dos atributos passados no cabeçalho for considerado com falso\n      //assim impedindo o recurso de ser executado\n      .catch(err => res.status(412).json({msg: err.message}))\n    })\n\n    .put((req, res) => {\n      /**Contem o objeto de Tasks, que está na pasta models */\n      const Categorias = utils.getModel(req.params.empresa, 'categoria');\n\n      Categorias.update(req.body, {where: {id: req.params.id}})\n      //Retorna 204 Significa que foi executada com sucesso porém não retornou conteudo com resposta\n      .then(value => res.sendStatus(204))\n      //Error 412 usado para quando uma dos atributos passados no cabeçalho for considerado com falso\n      //assim impedindo o recurso de ser executado\n      .catch(err => res.status(412).json({msg: err.message}))\n    })\n\n    .delete((req, res) => {\n      /**Contem o objeto de Tasks, que está na pasta models */\n      const Categorias = utils.getModel(req.params.empresa, 'categoria');\n\n      Categorias.destroy({where: {id: req.params.id}})\n      .then(value => res.sendStatus(204))\n      //Error 412 usado para quando uma dos atributos passados no cabeçalho for considerado com falso\n      //assim impedindo o recurso de ser executado\n      .catch(err => res.status(412).json({msg: err.message}))\n    });\n}\n"
  ]
}
