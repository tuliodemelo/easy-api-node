{
  "version": 3,
  "sources": [
    "auth.js"
  ],
  "names": [
    "module",
    "exports",
    "Users",
    "app",
    "libs",
    "sysDb",
    "models",
    "usuarios_aplos",
    "config",
    "jwtFromRequest",
    "fromAuthHeader",
    "strategy",
    "secretOrKey",
    "jwtSecret",
    "payload",
    "done",
    "findById",
    "id",
    "then",
    "user",
    "_id",
    "email",
    "catch",
    "error",
    "use",
    "initialize",
    "authenticate",
    "jwtSession"
  ],
  "mappings": ";;AAAA;;;;AACA;;;;AAEAA,OAAOC,OAAP,GAAiB,eAAO;AACpB,QAAMC,QAAQC,IAAIC,IAAJ,CAASC,KAAT,CAAeC,MAAf,CAAsBC,cAApC;AACA,QAAMC,SAASL,IAAIC,IAAJ,CAASI,MAAxB;AACA,QAAMC,iBAAiB,wBAAWC,cAAX,EAAvB;;AAEA,QAAMC,WAAW,0BAAa,EAACC,aAAaJ,OAAOK,SAArB,EAAgCJ,8BAAhC,EAAb,EACjB,UAACK,OAAD,EAAUC,IAAV,EAAmB;AACfb,cAAMc,QAAN,CAAeF,QAAQG,EAAvB,EACCC,IADD,CACM,UAACC,IAAD,EAAU;AACZ,gBAAIA,IAAJ,EAAU;AACN,uBAAOJ,KAAK,IAAL,EAAW;AACdE,wBAAIE,KAAKC,GADK;AAEdC,2BAAOF,KAAKE;AAFE,iBAAX,CAAP;AAIH;;AAED,mBAAON,KAAK,IAAL,EAAW,KAAX,CAAP;AACH,SAVD,EAUGO,KAVH,CAUS;AAAA,mBAASP,KAAKQ,KAAL,EAAY,IAAZ,CAAT;AAAA,SAVT;AAWH,KAbgB,CAAjB;;AAeA,uBAASC,GAAT,CAAab,QAAb;;AAEA,WAAO;AACHc,oBAAY,sBAAM;AACd,mBAAO,mBAASA,UAAT,EAAP;AACH,SAHE;AAIHC,sBAAc,wBAAM;AAChB,mBAAO,mBAASA,YAAT,CAAsB,KAAtB,EAA6BlB,OAAOmB,UAApC,CAAP;AACH;AANE,KAAP;AASH,CA/BD",
  "file": "auth.js",
  "sourceRoot": "../build",
  "sourcesContent": [
    "import passport from 'passport';\nimport {Strategy, ExtractJwt} from 'passport-jwt';\n\nmodule.exports = app => {\n    const Users = app.libs.sysDb.models.usuarios_aplos;\n    const config = app.libs.config;\n    const jwtFromRequest = ExtractJwt.fromAuthHeader();\n    \n    const strategy = new Strategy({secretOrKey: config.jwtSecret, jwtFromRequest},\n    (payload, done) => {\n        Users.findById(payload.id)\n        .then((user) => {\n            if (user) {\n                return done(null, {\n                    id: user._id,\n                    email: user.email,\n                });\n            }\n\n            return done(null, false);\n        }).catch(error => done(error, null));\n    });\n\n    passport.use(strategy);\n    \n    return {\n        initialize: () => {\n            return passport.initialize();\n        },\n        authenticate: () => {\n            return passport.authenticate('jwt', config.jwtSession);\n        },\n    } \n\n}"
  ]
}
